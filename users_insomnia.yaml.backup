type: spec.insomnia.rest/5.0
name: Users API 1.0.0
meta:
    id: wrk_50d29e66fc274fb6a9696ae35f9f675g
    created: 1750970987605
    modified: 1751034981040
collection:
    - name: users
      meta:
        id: fld_2ce885658947413caee63a9c55a71431
        created: 1751034981046
        modified: 1751034981046
        description: Operations related to users
        sortKey: -1751034981041
      children:
        - url: '{{ _.base_url }}/users'
          name: Get all users
          meta:
            id: req_e2705c966a6dcba2eab87e89f42ab549
            created: 1751034981051
            modified: 1751034981051
            description: Retrieves a list of all users
            sortKey: -1751034981041
          method: GET
          parameters:
            - name: limit
              value: '10'
              disabled: false
              id: pair_limit_001
            - name: offset
              value: '0'
              disabled: false
              id: pair_offset_001
          settings:
            renderRequestBody: true
            encodeUrl: true
            followRedirects: global
            cookies:
                send: true
                store: true
            rebuildPath: true
        - url: '{{ _.base_url }}/users/{{ _.userId }}'
          name: Get user by ID
          meta:
            id: req_f2705c966a6dcba2eab87e89f42ab550
            created: 1751034981052
            modified: 1751034981052
            description: Retrieves a specific user by their unique identifier
            sortKey: -1751034981040
          method: GET
          settings:
            renderRequestBody: true
            encodeUrl: true
            followRedirects: global
            cookies:
                send: true
                store: true
            rebuildPath: true
cookieJar:
    name: Default Jar
    meta:
        id: jar_c80e364e9488b026ad6f2f58d668708e208ac00f
        created: 1751034981036
        modified: 1751034981036
environments:
    name: Base Environment
    meta:
        id: env_c80e364e9488b026ad6f2f58d668708e208ac00f
        created: 1751034981034
        modified: 1751034981049
    data:
        base_url: '{{ _.scheme }}://{{ _.host }}{{ _.base_path }}'
    subEnvironments:
        - name: OpenAPI env localhost:8082
          meta:
            id: env_9a49e1b572893ffea49b22caf93d0fd4
            created: 1751034981050
            modified: 1751034981050
            sortKey: 1751034981050
          data:
            scheme: http
            base_path: /api/v1
            host: localhost:8082
            userId: '123'
spec:
    contents:
        components:
            schemas:
                User:
                    description: User details
                    properties:
                        id:
                            description: Unique identifier for the user
                            example: 1
                            format: int64
                            type: integer
                        name:
                            description: Full name of the user
                            example: John Doe
                            type: string
                        email:
                            description: Email address of the user
                            example: john.doe@example.com
                            format: email
                            type: string
                        phone:
                            description: Phone number of the user
                            example: "+1-555-123-4567"
                            pattern: '^\+?[1-9]\d{1,14}$'
                            type: string
                    required:
                        - id
                        - name
                        - email
                        - phone
                    type: object
                ErrorResponse:
                    description: Standard error response structure
                    properties:
                        code:
                            description: Error code identifying the type of error
                            enum:
                                - INVALID_REQUEST
                                - NOT_FOUND
                                - CONFLICT
                                - INTERNAL_ERROR
                            example: NOT_FOUND
                            type: string
                        message:
                            description: Human-readable error message
                            example: User not found
                            type: string
                    required:
                        - code
                        - message
                    type: object
        info:
            contact:
                email: support@example.com
                name: API Support
            description: API endpoints for managing users
            title: Users API
            version: 1.0.0
        openapi: 3.0.3
        paths:
            /users:
                get:
                    description: Retrieves a list of all users
                    operationId: getAllUsers
                    parameters:
                        - description: Maximum number of users to return
                          example: 10
                          in: query
                          name: limit
                          required: false
                          schema:
                            default: 10
                            maximum: 100
                            minimum: 1
                            type: integer
                        - description: Number of users to skip for pagination
                          example: 0
                          in: query
                          name: offset
                          required: false
                          schema:
                            default: 0
                            minimum: 0
                            type: integer
                    responses:
                        "200":
                            content:
                                application/json:
                                    example:
                                        limit: 10
                                        offset: 0
                                        total: 150
                                        users:
                                            - email: john.doe@example.com
                                              id: 1
                                              name: John Doe
                                              phone: "+1-555-123-4567"
                                            - email: jane.smith@example.com
                                              id: 2
                                              name: Jane Smith
                                              phone: "+1-555-987-6543"
                                    schema:
                                        properties:
                                            limit:
                                                description: Limit applied to the request
                                                example: 10
                                                type: integer
                                            offset:
                                                description: Offset applied to the request
                                                example: 0
                                                type: integer
                                            total:
                                                description: Total number of users
                                                example: 150
                                                type: integer
                                            users:
                                                items:
                                                    $ref: "#/components/schemas/User"
                                                type: array
                                        type: object
                            description: Successfully retrieved users
                        "400":
                            content:
                                application/json:
                                    example:
                                        code: INVALID_REQUEST
                                        message: Invalid limit or offset parameters
                                    schema:
                                        $ref: "#/components/schemas/ErrorResponse"
                            description: Invalid query parameters
                        "500":
                            content:
                                application/json:
                                    example:
                                        code: INTERNAL_ERROR
                                        message: Internal server error
                                    schema:
                                        $ref: "#/components/schemas/ErrorResponse"
                            description: Internal server error
                    summary: Get all users
                    tags:
                        - users
            "/users/{userId}":
                get:
                    description: Retrieves a specific user by their unique identifier
                    operationId: getUserById
                    parameters:
                        - description: Unique identifier of the user
                          example: 123
                          in: path
                          name: userId
                          required: true
                          schema:
                            format: int64
                            minimum: 1
                            type: integer
                    responses:
                        "200":
                            content:
                                application/json:
                                    example:
                                        email: john.doe@example.com
                                        id: 123
                                        name: John Doe
                                        phone: "+1-555-123-4567"
                                    schema:
                                        $ref: "#/components/schemas/User"
                            description: Successfully retrieved user
                        "400":
                            content:
                                application/json:
                                    example:
                                        code: INVALID_REQUEST
                                        message: Invalid user ID
                                    schema:
                                        $ref: "#/components/schemas/ErrorResponse"
                            description: Invalid user ID provided
                        "404":
                            content:
                                application/json:
                                    example:
                                        code: NOT_FOUND
                                        message: User not found
                                    schema:
                                        $ref: "#/components/schemas/ErrorResponse"
                            description: User not found
                        "500":
                            content:
                                application/json:
                                    example:
                                        code: INTERNAL_ERROR
                                        message: Internal server error
                                    schema:
                                        $ref: "#/components/schemas/ErrorResponse"
                            description: Internal server error
                    summary: Get user by ID
                    tags:
                        - users
        servers:
            - description: Local development server
              url: http://localhost:8082/api/v1
        tags:
            - description: Operations related to users
              name: users 